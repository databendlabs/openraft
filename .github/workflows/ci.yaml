on: [push, pull_request]
name: ci
jobs:
  build-async-raft:
    name: build async-raft
    runs-on: ubuntu-latest
    strategy:
      matrix:
        store_defensive:
          - "on"
          - "off"

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2

      # use rust-toolchain file
      - name: Setup | Toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy

      # # - A store with defensive checks returns error when unexpected accesses are sent to RaftStore.
      # # - Raft should not depend on defensive error to work correctly.
      # - name: Unit Tests, with and without defensive store
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: test
      #   env:
      #     RUST_LOG: debug
      #     RUST_BACKTRACE: full
      #     RAFT_STORE_DEFENSIVE: ${{ matrix.store_defensive }}

      # # release build
      # - name: Build | Release Mode
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: build
      #     args: --release --all-features

      # - name: Clippy
      #   uses: actions-rs/clippy-check@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     args: --all-targets -- -D warnings -A clippy::bool-assert-comparison

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          path: |
            async-raft/_log/
